// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: schema.proto

package mcp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The sender or recipient of messages and data in a conversation.
type Role int32

const (
	Role_ASSISTANT Role = 0
	Role_USER      Role = 1
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0: "ASSISTANT",
		1: "USER",
	}
	Role_value = map[string]int32{
		"ASSISTANT": 0,
		"USER":      1,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_proto_enumTypes[0].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_schema_proto_enumTypes[0]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{0}
}

// The severity of a log message. These map to syslog message severities, as specified in RFC-5424: https://datatracker.ietf.org/doc/html/rfc5424#section-6.2.1
type Logginglevel int32

const (
	Logginglevel_ALERT     Logginglevel = 0
	Logginglevel_CRITICAL  Logginglevel = 1
	Logginglevel_DEBUG     Logginglevel = 2
	Logginglevel_EMERGENCY Logginglevel = 3
	Logginglevel_ERROR     Logginglevel = 4
	Logginglevel_INFO      Logginglevel = 5
	Logginglevel_NOTICE    Logginglevel = 6
	Logginglevel_WARNING   Logginglevel = 7
)

// Enum value maps for Logginglevel.
var (
	Logginglevel_name = map[int32]string{
		0: "ALERT",
		1: "CRITICAL",
		2: "DEBUG",
		3: "EMERGENCY",
		4: "ERROR",
		5: "INFO",
		6: "NOTICE",
		7: "WARNING",
	}
	Logginglevel_value = map[string]int32{
		"ALERT":     0,
		"CRITICAL":  1,
		"DEBUG":     2,
		"EMERGENCY": 3,
		"ERROR":     4,
		"INFO":      5,
		"NOTICE":    6,
		"WARNING":   7,
	}
)

func (x Logginglevel) Enum() *Logginglevel {
	p := new(Logginglevel)
	*p = x
	return p
}

func (x Logginglevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Logginglevel) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_proto_enumTypes[1].Descriptor()
}

func (Logginglevel) Type() protoreflect.EnumType {
	return &file_schema_proto_enumTypes[1]
}

func (x Logginglevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Logginglevel.Descriptor instead.
func (Logginglevel) EnumDescriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{1}
}

// A notification from the server to the client, informing it that a resource has changed and may need to be read again. This should only be sent if the client previously sent a resources/subscribe request.
type Resourceupdatednotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Params        *anypb.Any             `protobuf:"bytes,1,opt,name=Params,proto3" json:"Params,omitempty"`
	Method        string                 `protobuf:"bytes,2,opt,name=Method,proto3" json:"Method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resourceupdatednotification) Reset() {
	*x = Resourceupdatednotification{}
	mi := &file_schema_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resourceupdatednotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resourceupdatednotification) ProtoMessage() {}

func (x *Resourceupdatednotification) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resourceupdatednotification.ProtoReflect.Descriptor instead.
func (*Resourceupdatednotification) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{0}
}

func (x *Resourceupdatednotification) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Resourceupdatednotification) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

// Audio provided to or from an LLM.
type Audiocontent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The MIME type of the audio. Different providers may support different audio types.
	Mimetype string `protobuf:"bytes,1,opt,name=Mimetype,proto3" json:"Mimetype,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	// Optional annotations for the client.
	Annotations *Annotations `protobuf:"bytes,3,opt,name=Annotations,proto3" json:"Annotations,omitempty"`
	// The base64-encoded audio data.
	Data          string `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Audiocontent) Reset() {
	*x = Audiocontent{}
	mi := &file_schema_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Audiocontent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audiocontent) ProtoMessage() {}

func (x *Audiocontent) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audiocontent.ProtoReflect.Descriptor instead.
func (*Audiocontent) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{1}
}

func (x *Audiocontent) GetMimetype() string {
	if x != nil {
		return x.Mimetype
	}
	return ""
}

func (x *Audiocontent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Audiocontent) GetAnnotations() *Annotations {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Audiocontent) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// This notification can be sent by either side to indicate that it is cancelling a previously-issued request. The request SHOULD still be in-flight, but due to communication latency, it is always possible that this notification MAY arrive after the request has already finished. This notification indicates that the result will be unused, so any associated processing SHOULD cease. A client MUST NOT attempt to cancel its `initialize` request.
type Cancellednotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cancellednotification) Reset() {
	*x = Cancellednotification{}
	mi := &file_schema_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cancellednotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cancellednotification) ProtoMessage() {}

func (x *Cancellednotification) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cancellednotification.ProtoReflect.Descriptor instead.
func (*Cancellednotification) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{2}
}

func (x *Cancellednotification) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Cancellednotification) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// Sent from the client to request a list of resources the server has.
type Listresourcesrequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Listresourcesrequest) Reset() {
	*x = Listresourcesrequest{}
	mi := &file_schema_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Listresourcesrequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listresourcesrequest) ProtoMessage() {}

func (x *Listresourcesrequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listresourcesrequest.ProtoReflect.Descriptor instead.
func (*Listresourcesrequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{3}
}

func (x *Listresourcesrequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Listresourcesrequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

type Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.
	Meta          *anypb.Any `protobuf:"bytes,1,opt,name=Meta,proto3" json:"Meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_schema_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{4}
}

func (x *Result) GetMeta() *anypb.Any {
	if x != nil {
		return x.Meta
	}
	return nil
}

// Sent from the client to request resources/updated notifications from the server whenever a particular resource changes.
type Subscriberequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subscriberequest) Reset() {
	*x = Subscriberequest{}
	mi := &file_schema_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subscriberequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscriberequest) ProtoMessage() {}

func (x *Subscriberequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscriberequest.ProtoReflect.Descriptor instead.
func (*Subscriberequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{5}
}

func (x *Subscriberequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Subscriberequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// The contents of a resource, embedded into a prompt or tool call result. It is up to the client how best to render embedded resources for the benefit of the LLM and/or the user.
type Embeddedresource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  string                 `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	// Optional annotations for the client.
	Annotations   *Annotations `protobuf:"bytes,2,opt,name=Annotations,proto3" json:"Annotations,omitempty"`
	Resource      *anypb.Any   `protobuf:"bytes,3,opt,name=Resource,proto3" json:"Resource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Embeddedresource) Reset() {
	*x = Embeddedresource{}
	mi := &file_schema_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Embeddedresource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Embeddedresource) ProtoMessage() {}

func (x *Embeddedresource) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Embeddedresource.ProtoReflect.Descriptor instead.
func (*Embeddedresource) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{6}
}

func (x *Embeddedresource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Embeddedresource) GetAnnotations() *Annotations {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Embeddedresource) GetResource() *anypb.Any {
	if x != nil {
		return x.Resource
	}
	return nil
}

// This notification is sent from the client to the server after initialization has finished.
type Initializednotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Initializednotification) Reset() {
	*x = Initializednotification{}
	mi := &file_schema_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Initializednotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Initializednotification) ProtoMessage() {}

func (x *Initializednotification) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Initializednotification.ProtoReflect.Descriptor instead.
func (*Initializednotification) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{7}
}

func (x *Initializednotification) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Initializednotification) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// A successful (non-error) response to a request.
type Jsonrpcresponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Jsonrpc       string                 `protobuf:"bytes,2,opt,name=Jsonrpc,proto3" json:"Jsonrpc,omitempty"`
	Result        *Result                `protobuf:"bytes,3,opt,name=Result,proto3" json:"Result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Jsonrpcresponse) Reset() {
	*x = Jsonrpcresponse{}
	mi := &file_schema_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jsonrpcresponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jsonrpcresponse) ProtoMessage() {}

func (x *Jsonrpcresponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jsonrpcresponse.ProtoReflect.Descriptor instead.
func (*Jsonrpcresponse) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{8}
}

func (x *Jsonrpcresponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Jsonrpcresponse) GetJsonrpc() string {
	if x != nil {
		return x.Jsonrpc
	}
	return ""
}

func (x *Jsonrpcresponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// An optional notification from the server to the client, informing it that the list of resources it can read from has changed. This may be issued by servers without any previous subscription from the client.
type Resourcelistchangednotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resourcelistchangednotification) Reset() {
	*x = Resourcelistchangednotification{}
	mi := &file_schema_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resourcelistchangednotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resourcelistchangednotification) ProtoMessage() {}

func (x *Resourcelistchangednotification) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resourcelistchangednotification.ProtoReflect.Descriptor instead.
func (*Resourcelistchangednotification) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{9}
}

func (x *Resourcelistchangednotification) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Resourcelistchangednotification) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// A template description for resources available on the server.
type Resourcetemplate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A human-readable name for the type of resource this template refers to. This can be used by clients to populate UI elements.
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// A URI template (according to RFC 6570) that can be used to construct resource URIs.
	Uritemplate string `protobuf:"bytes,2,opt,name=Uritemplate,proto3" json:"Uritemplate,omitempty"`
	// Optional annotations for the client.
	Annotations *Annotations `protobuf:"bytes,3,opt,name=Annotations,proto3" json:"Annotations,omitempty"`
	// A description of what this template is for. This can be used by clients to improve the LLM's understanding of available resources. It can be thought of like a "hint" to the model.
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	// The MIME type for all resources that match this template. This should only be included if all resources matching this template have the same type.
	Mimetype      string `protobuf:"bytes,5,opt,name=Mimetype,proto3" json:"Mimetype,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resourcetemplate) Reset() {
	*x = Resourcetemplate{}
	mi := &file_schema_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resourcetemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resourcetemplate) ProtoMessage() {}

func (x *Resourcetemplate) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resourcetemplate.ProtoReflect.Descriptor instead.
func (*Resourcetemplate) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{10}
}

func (x *Resourcetemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resourcetemplate) GetUritemplate() string {
	if x != nil {
		return x.Uritemplate
	}
	return ""
}

func (x *Resourcetemplate) GetAnnotations() *Annotations {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Resourcetemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Resourcetemplate) GetMimetype() string {
	if x != nil {
		return x.Mimetype
	}
	return ""
}

// An image provided to or from an LLM.
type Imagecontent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  string                 `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	// Optional annotations for the client.
	Annotations *Annotations `protobuf:"bytes,2,opt,name=Annotations,proto3" json:"Annotations,omitempty"`
	// The base64-encoded image data.
	Data string `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	// The MIME type of the image. Different providers may support different image types.
	Mimetype      string `protobuf:"bytes,4,opt,name=Mimetype,proto3" json:"Mimetype,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Imagecontent) Reset() {
	*x = Imagecontent{}
	mi := &file_schema_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Imagecontent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Imagecontent) ProtoMessage() {}

func (x *Imagecontent) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Imagecontent.ProtoReflect.Descriptor instead.
func (*Imagecontent) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{11}
}

func (x *Imagecontent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Imagecontent) GetAnnotations() *Annotations {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Imagecontent) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Imagecontent) GetMimetype() string {
	if x != nil {
		return x.Mimetype
	}
	return ""
}

// Sent from the client to request a list of resource templates the server has.
type Listresourcetemplatesrequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Listresourcetemplatesrequest) Reset() {
	*x = Listresourcetemplatesrequest{}
	mi := &file_schema_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Listresourcetemplatesrequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listresourcetemplatesrequest) ProtoMessage() {}

func (x *Listresourcetemplatesrequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listresourcetemplatesrequest.ProtoReflect.Descriptor instead.
func (*Listresourcetemplatesrequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{12}
}

func (x *Listresourcetemplatesrequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Listresourcetemplatesrequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// Describes an argument that a prompt can accept.
type Promptargument struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A human-readable description of the argument.
	Description string `protobuf:"bytes,1,opt,name=Description,proto3" json:"Description,omitempty"`
	// The name of the argument.
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// Whether this argument must be provided.
	Required      bool `protobuf:"varint,3,opt,name=Required,proto3" json:"Required,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Promptargument) Reset() {
	*x = Promptargument{}
	mi := &file_schema_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Promptargument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Promptargument) ProtoMessage() {}

func (x *Promptargument) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Promptargument.ProtoReflect.Descriptor instead.
func (*Promptargument) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{13}
}

func (x *Promptargument) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Promptargument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Promptargument) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

// Definition for a tool the client can call.
type Tool struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A human-readable description of the tool. This can be used by clients to improve the LLM's understanding of available tools. It can be thought of like a "hint" to the model.
	Description string `protobuf:"bytes,1,opt,name=Description,proto3" json:"Description,omitempty"`
	// A JSON Schema object defining the expected parameters for the tool.
	Inputschema *anypb.Any `protobuf:"bytes,2,opt,name=Inputschema,proto3" json:"Inputschema,omitempty"`
	// The name of the tool.
	Name string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	// Optional additional tool information.
	Annotations   *Toolannotations `protobuf:"bytes,4,opt,name=Annotations,proto3" json:"Annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tool) Reset() {
	*x = Tool{}
	mi := &file_schema_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tool) ProtoMessage() {}

func (x *Tool) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tool.ProtoReflect.Descriptor instead.
func (*Tool) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{14}
}

func (x *Tool) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tool) GetInputschema() *anypb.Any {
	if x != nil {
		return x.Inputschema
	}
	return nil
}

func (x *Tool) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tool) GetAnnotations() *Toolannotations {
	if x != nil {
		return x.Annotations
	}
	return nil
}

// The server's response to a tool call. Any errors that originate from the tool SHOULD be reported inside the result object, with `isError` set to true, _not_ as an MCP protocol-level error response. Otherwise, the LLM would not be able to see that an error occurred and self-correct. However, any errors in _finding_ the tool, an error indicating that the server does not support tool calls, or any other exceptional conditions, should be reported as an MCP error response.
type Calltoolresult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.
	Meta    *anypb.Any   `protobuf:"bytes,1,opt,name=Meta,proto3" json:"Meta,omitempty"`
	Content []*anypb.Any `protobuf:"bytes,2,rep,name=Content,proto3" json:"Content,omitempty"`
	// Whether the tool call ended in an error. If not set, this is assumed to be false (the call was successful).
	Iserror       bool `protobuf:"varint,3,opt,name=Iserror,proto3" json:"Iserror,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Calltoolresult) Reset() {
	*x = Calltoolresult{}
	mi := &file_schema_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Calltoolresult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Calltoolresult) ProtoMessage() {}

func (x *Calltoolresult) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Calltoolresult.ProtoReflect.Descriptor instead.
func (*Calltoolresult) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{15}
}

func (x *Calltoolresult) GetMeta() *anypb.Any {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Calltoolresult) GetContent() []*anypb.Any {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Calltoolresult) GetIserror() bool {
	if x != nil {
		return x.Iserror
	}
	return false
}

// Describes the name and version of an MCP implementation.
type Implementation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Implementation) Reset() {
	*x = Implementation{}
	mi := &file_schema_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Implementation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Implementation) ProtoMessage() {}

func (x *Implementation) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Implementation.ProtoReflect.Descriptor instead.
func (*Implementation) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{16}
}

func (x *Implementation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Implementation) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// This request is sent from the client to the server when it first connects, asking it to begin initialization.
type Initializerequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Initializerequest) Reset() {
	*x = Initializerequest{}
	mi := &file_schema_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Initializerequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Initializerequest) ProtoMessage() {}

func (x *Initializerequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Initializerequest.ProtoReflect.Descriptor instead.
func (*Initializerequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{17}
}

func (x *Initializerequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Initializerequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// Sent from the client to request cancellation of resources/updated notifications from the server. This should follow a previous resources/subscribe request.
type Unsubscriberequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Unsubscriberequest) Reset() {
	*x = Unsubscriberequest{}
	mi := &file_schema_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Unsubscriberequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unsubscriberequest) ProtoMessage() {}

func (x *Unsubscriberequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unsubscriberequest.ProtoReflect.Descriptor instead.
func (*Unsubscriberequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{18}
}

func (x *Unsubscriberequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Unsubscriberequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// The server's response to a prompts/get request from the client.
type Getpromptresult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.
	Meta *anypb.Any `protobuf:"bytes,1,opt,name=Meta,proto3" json:"Meta,omitempty"`
	// An optional description for the prompt.
	Description   string           `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	Messages      []*Promptmessage `protobuf:"bytes,3,rep,name=Messages,proto3" json:"Messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Getpromptresult) Reset() {
	*x = Getpromptresult{}
	mi := &file_schema_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Getpromptresult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Getpromptresult) ProtoMessage() {}

func (x *Getpromptresult) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Getpromptresult.ProtoReflect.Descriptor instead.
func (*Getpromptresult) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{19}
}

func (x *Getpromptresult) GetMeta() *anypb.Any {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Getpromptresult) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Getpromptresult) GetMessages() []*Promptmessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

// Identifies a prompt.
type Promptreference struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the prompt or prompt template
	Name          string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Type          string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Promptreference) Reset() {
	*x = Promptreference{}
	mi := &file_schema_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Promptreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Promptreference) ProtoMessage() {}

func (x *Promptreference) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Promptreference.ProtoReflect.Descriptor instead.
func (*Promptreference) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{20}
}

func (x *Promptreference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Promptreference) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// A known resource that the server is capable of reading.
type Resource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A human-readable name for this resource. This can be used by clients to populate UI elements.
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// The size of the raw resource content, in bytes (i.e., before base64 encoding or any tokenization), if known. This can be used by Hosts to display file sizes and estimate context window usage.
	Size int64 `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
	// The URI of this resource.
	Uri string `protobuf:"bytes,3,opt,name=Uri,proto3" json:"Uri,omitempty"`
	// Optional annotations for the client.
	Annotations *Annotations `protobuf:"bytes,4,opt,name=Annotations,proto3" json:"Annotations,omitempty"`
	// A description of what this resource represents. This can be used by clients to improve the LLM's understanding of available resources. It can be thought of like a "hint" to the model.
	Description string `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	// The MIME type of this resource, if known.
	Mimetype      string `protobuf:"bytes,6,opt,name=Mimetype,proto3" json:"Mimetype,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_schema_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{21}
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resource) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Resource) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Resource) GetAnnotations() *Annotations {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Resource) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Resource) GetMimetype() string {
	if x != nil {
		return x.Mimetype
	}
	return ""
}

// Represents a root directory or file that the server can operate on.
type Root struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An optional name for the root. This can be used to provide a human-readable identifier for the root, which may be useful for display purposes or for referencing the root in other parts of the application.
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// The URI identifying the root. This *must* start with file:// for now. This restriction may be relaxed in future versions of the protocol to allow other URI schemes.
	Uri           string `protobuf:"bytes,2,opt,name=Uri,proto3" json:"Uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Root) Reset() {
	*x = Root{}
	mi := &file_schema_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Root) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Root) ProtoMessage() {}

func (x *Root) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Root.ProtoReflect.Descriptor instead.
func (*Root) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{22}
}

func (x *Root) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Root) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// A notification from the client to the server, informing it that the list of roots has changed. This notification should be sent whenever the client adds, removes, or modifies any root. The server should then request an updated list of roots using the ListRootsRequest.
type Rootslistchangednotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rootslistchangednotification) Reset() {
	*x = Rootslistchangednotification{}
	mi := &file_schema_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rootslistchangednotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rootslistchangednotification) ProtoMessage() {}

func (x *Rootslistchangednotification) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rootslistchangednotification.ProtoReflect.Descriptor instead.
func (*Rootslistchangednotification) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{23}
}

func (x *Rootslistchangednotification) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Rootslistchangednotification) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// Capabilities a client may support. Known capabilities are defined here, in this schema, but this is not a closed set: any client can define its own, additional capabilities.
type Clientcapabilities struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Experimental, non-standard capabilities that the client supports.
	Experimental *anypb.Any `protobuf:"bytes,1,opt,name=Experimental,proto3" json:"Experimental,omitempty"`
	// Present if the client supports listing roots.
	Roots *anypb.Any `protobuf:"bytes,2,opt,name=Roots,proto3" json:"Roots,omitempty"`
	// Present if the client supports sampling from an LLM.
	Sampling      *anypb.Any `protobuf:"bytes,3,opt,name=Sampling,proto3" json:"Sampling,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Clientcapabilities) Reset() {
	*x = Clientcapabilities{}
	mi := &file_schema_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Clientcapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clientcapabilities) ProtoMessage() {}

func (x *Clientcapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clientcapabilities.ProtoReflect.Descriptor instead.
func (*Clientcapabilities) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{24}
}

func (x *Clientcapabilities) GetExperimental() *anypb.Any {
	if x != nil {
		return x.Experimental
	}
	return nil
}

func (x *Clientcapabilities) GetRoots() *anypb.Any {
	if x != nil {
		return x.Roots
	}
	return nil
}

func (x *Clientcapabilities) GetSampling() *anypb.Any {
	if x != nil {
		return x.Sampling
	}
	return nil
}

type Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Params        *anypb.Any             `protobuf:"bytes,1,opt,name=Params,proto3" json:"Params,omitempty"`
	Method        string                 `protobuf:"bytes,2,opt,name=Method,proto3" json:"Method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_schema_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{25}
}

func (x *Notification) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Notification) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type Paginatedresult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.
	Meta *anypb.Any `protobuf:"bytes,1,opt,name=Meta,proto3" json:"Meta,omitempty"`
	// An opaque token representing the pagination position after the last returned result. If present, there may be more results available.
	Nextcursor    string `protobuf:"bytes,2,opt,name=Nextcursor,proto3" json:"Nextcursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Paginatedresult) Reset() {
	*x = Paginatedresult{}
	mi := &file_schema_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Paginatedresult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paginatedresult) ProtoMessage() {}

func (x *Paginatedresult) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paginatedresult.ProtoReflect.Descriptor instead.
func (*Paginatedresult) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{26}
}

func (x *Paginatedresult) GetMeta() *anypb.Any {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Paginatedresult) GetNextcursor() string {
	if x != nil {
		return x.Nextcursor
	}
	return ""
}

// A request that expects a response.
type Jsonrpcrequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Jsonrpc       string                 `protobuf:"bytes,2,opt,name=Jsonrpc,proto3" json:"Jsonrpc,omitempty"`
	Method        string                 `protobuf:"bytes,3,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,4,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Jsonrpcrequest) Reset() {
	*x = Jsonrpcrequest{}
	mi := &file_schema_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jsonrpcrequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jsonrpcrequest) ProtoMessage() {}

func (x *Jsonrpcrequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jsonrpcrequest.ProtoReflect.Descriptor instead.
func (*Jsonrpcrequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{27}
}

func (x *Jsonrpcrequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Jsonrpcrequest) GetJsonrpc() string {
	if x != nil {
		return x.Jsonrpc
	}
	return ""
}

func (x *Jsonrpcrequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Jsonrpcrequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// The server's response to a prompts/list request from the client.
type Listpromptsresult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.
	Meta *anypb.Any `protobuf:"bytes,1,opt,name=Meta,proto3" json:"Meta,omitempty"`
	// An opaque token representing the pagination position after the last returned result. If present, there may be more results available.
	Nextcursor    string    `protobuf:"bytes,2,opt,name=Nextcursor,proto3" json:"Nextcursor,omitempty"`
	Prompts       []*Prompt `protobuf:"bytes,3,rep,name=Prompts,proto3" json:"Prompts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Listpromptsresult) Reset() {
	*x = Listpromptsresult{}
	mi := &file_schema_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Listpromptsresult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listpromptsresult) ProtoMessage() {}

func (x *Listpromptsresult) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listpromptsresult.ProtoReflect.Descriptor instead.
func (*Listpromptsresult) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{28}
}

func (x *Listpromptsresult) GetMeta() *anypb.Any {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Listpromptsresult) GetNextcursor() string {
	if x != nil {
		return x.Nextcursor
	}
	return ""
}

func (x *Listpromptsresult) GetPrompts() []*Prompt {
	if x != nil {
		return x.Prompts
	}
	return nil
}

// The server's response to a resources/list request from the client.
type Listresourcesresult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.
	Meta *anypb.Any `protobuf:"bytes,1,opt,name=Meta,proto3" json:"Meta,omitempty"`
	// An opaque token representing the pagination position after the last returned result. If present, there may be more results available.
	Nextcursor    string      `protobuf:"bytes,2,opt,name=Nextcursor,proto3" json:"Nextcursor,omitempty"`
	Resources     []*Resource `protobuf:"bytes,3,rep,name=Resources,proto3" json:"Resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Listresourcesresult) Reset() {
	*x = Listresourcesresult{}
	mi := &file_schema_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Listresourcesresult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listresourcesresult) ProtoMessage() {}

func (x *Listresourcesresult) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listresourcesresult.ProtoReflect.Descriptor instead.
func (*Listresourcesresult) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{29}
}

func (x *Listresourcesresult) GetMeta() *anypb.Any {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Listresourcesresult) GetNextcursor() string {
	if x != nil {
		return x.Nextcursor
	}
	return ""
}

func (x *Listresourcesresult) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

// Hints to use for model selection. Keys not declared here are currently left unspecified by the spec and are up to the client to interpret.
type Modelhint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A hint for a model name. The client SHOULD treat this as a substring of a model name; for example: - `claude-3-5-sonnet` should match `claude-3-5-sonnet-20241022` - `sonnet` should match `claude-3-5-sonnet-20241022`, `claude-3-sonnet-20240229`, etc. - `claude` should match any Claude model The client MAY also map the string to a different provider's model name or a different model family, as long as it fills a similar niche; for example: - `gemini-1.5-flash` could match `claude-3-haiku-20240307`
	Name          string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Modelhint) Reset() {
	*x = Modelhint{}
	mi := &file_schema_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Modelhint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Modelhint) ProtoMessage() {}

func (x *Modelhint) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Modelhint.ProtoReflect.Descriptor instead.
func (*Modelhint) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{30}
}

func (x *Modelhint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Paginatedrequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Paginatedrequest) Reset() {
	*x = Paginatedrequest{}
	mi := &file_schema_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Paginatedrequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paginatedrequest) ProtoMessage() {}

func (x *Paginatedrequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paginatedrequest.ProtoReflect.Descriptor instead.
func (*Paginatedrequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{31}
}

func (x *Paginatedrequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Paginatedrequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// Sent from the server to request a list of root URIs from the client. Roots allow servers to ask for specific directories or files to operate on. A common example for roots is providing a set of repositories or directories a server should operate on. This request is typically used when the server needs to understand the file system structure or access specific locations that the client has permission to read from.
type Listrootsrequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Listrootsrequest) Reset() {
	*x = Listrootsrequest{}
	mi := &file_schema_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Listrootsrequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listrootsrequest) ProtoMessage() {}

func (x *Listrootsrequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listrootsrequest.ProtoReflect.Descriptor instead.
func (*Listrootsrequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{32}
}

func (x *Listrootsrequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Listrootsrequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// A prompt or prompt template that the server offers.
type Prompt struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of arguments to use for templating the prompt.
	Arguments []*Promptargument `protobuf:"bytes,1,rep,name=Arguments,proto3" json:"Arguments,omitempty"`
	// An optional description of what this prompt provides
	Description string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	// The name of the prompt or prompt template.
	Name          string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Prompt) Reset() {
	*x = Prompt{}
	mi := &file_schema_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Prompt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prompt) ProtoMessage() {}

func (x *Prompt) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prompt.ProtoReflect.Descriptor instead.
func (*Prompt) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{33}
}

func (x *Prompt) GetArguments() []*Promptargument {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *Prompt) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Prompt) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Describes a message returned as part of a prompt. This is similar to `SamplingMessage`, but also supports the embedding of resources from the MCP server.
type Promptmessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       *anypb.Any             `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	Role          Role                   `protobuf:"varint,2,opt,name=Role,proto3,enum=mcp.Role" json:"Role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Promptmessage) Reset() {
	*x = Promptmessage{}
	mi := &file_schema_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Promptmessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Promptmessage) ProtoMessage() {}

func (x *Promptmessage) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Promptmessage.ProtoReflect.Descriptor instead.
func (*Promptmessage) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{34}
}

func (x *Promptmessage) GetContent() *anypb.Any {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Promptmessage) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_ASSISTANT
}

// The client's response to a roots/list request from the server. This result contains an array of Root objects, each representing a root directory or file that the server can operate on.
type Listrootsresult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.
	Meta          *anypb.Any `protobuf:"bytes,1,opt,name=Meta,proto3" json:"Meta,omitempty"`
	Roots         []*Root    `protobuf:"bytes,2,rep,name=Roots,proto3" json:"Roots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Listrootsresult) Reset() {
	*x = Listrootsresult{}
	mi := &file_schema_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Listrootsresult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listrootsresult) ProtoMessage() {}

func (x *Listrootsresult) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listrootsresult.ProtoReflect.Descriptor instead.
func (*Listrootsresult) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{35}
}

func (x *Listrootsresult) GetMeta() *anypb.Any {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Listrootsresult) GetRoots() []*Root {
	if x != nil {
		return x.Roots
	}
	return nil
}

type Textresourcecontents struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The text of the item. This must only be set if the item can actually be represented as text (not binary data).
	Text string `protobuf:"bytes,1,opt,name=Text,proto3" json:"Text,omitempty"`
	// The URI of this resource.
	Uri string `protobuf:"bytes,2,opt,name=Uri,proto3" json:"Uri,omitempty"`
	// The MIME type of this resource, if known.
	Mimetype      string `protobuf:"bytes,3,opt,name=Mimetype,proto3" json:"Mimetype,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Textresourcecontents) Reset() {
	*x = Textresourcecontents{}
	mi := &file_schema_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Textresourcecontents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Textresourcecontents) ProtoMessage() {}

func (x *Textresourcecontents) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Textresourcecontents.ProtoReflect.Descriptor instead.
func (*Textresourcecontents) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{36}
}

func (x *Textresourcecontents) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Textresourcecontents) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Textresourcecontents) GetMimetype() string {
	if x != nil {
		return x.Mimetype
	}
	return ""
}

// A response to a request that indicates an error occurred.
type Jsonrpcerror struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         *anypb.Any             `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	Jsonrpc       string                 `protobuf:"bytes,3,opt,name=Jsonrpc,proto3" json:"Jsonrpc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Jsonrpcerror) Reset() {
	*x = Jsonrpcerror{}
	mi := &file_schema_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jsonrpcerror) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jsonrpcerror) ProtoMessage() {}

func (x *Jsonrpcerror) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jsonrpcerror.ProtoReflect.Descriptor instead.
func (*Jsonrpcerror) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{37}
}

func (x *Jsonrpcerror) GetError() *anypb.Any {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Jsonrpcerror) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Jsonrpcerror) GetJsonrpc() string {
	if x != nil {
		return x.Jsonrpc
	}
	return ""
}

// Sent from the client to request a list of prompts and prompt templates the server has.
type Listpromptsrequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Listpromptsrequest) Reset() {
	*x = Listpromptsrequest{}
	mi := &file_schema_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Listpromptsrequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listpromptsrequest) ProtoMessage() {}

func (x *Listpromptsrequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listpromptsrequest.ProtoReflect.Descriptor instead.
func (*Listpromptsrequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{38}
}

func (x *Listpromptsrequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Listpromptsrequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// Notification of a log message passed from server to client. If no logging/setLevel request has been sent from the client, the server MAY decide which messages to send automatically.
type Loggingmessagenotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Loggingmessagenotification) Reset() {
	*x = Loggingmessagenotification{}
	mi := &file_schema_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Loggingmessagenotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Loggingmessagenotification) ProtoMessage() {}

func (x *Loggingmessagenotification) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Loggingmessagenotification.ProtoReflect.Descriptor instead.
func (*Loggingmessagenotification) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{39}
}

func (x *Loggingmessagenotification) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Loggingmessagenotification) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// A ping, issued by either the server or the client, to check that the other party is still alive. The receiver must promptly respond, or else may be disconnected.
type Pingrequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pingrequest) Reset() {
	*x = Pingrequest{}
	mi := &file_schema_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pingrequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pingrequest) ProtoMessage() {}

func (x *Pingrequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pingrequest.ProtoReflect.Descriptor instead.
func (*Pingrequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{40}
}

func (x *Pingrequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Pingrequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// The contents of a specific resource or sub-resource.
type Resourcecontents struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The MIME type of this resource, if known.
	Mimetype string `protobuf:"bytes,1,opt,name=Mimetype,proto3" json:"Mimetype,omitempty"`
	// The URI of this resource.
	Uri           string `protobuf:"bytes,2,opt,name=Uri,proto3" json:"Uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resourcecontents) Reset() {
	*x = Resourcecontents{}
	mi := &file_schema_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resourcecontents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resourcecontents) ProtoMessage() {}

func (x *Resourcecontents) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resourcecontents.ProtoReflect.Descriptor instead.
func (*Resourcecontents) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{41}
}

func (x *Resourcecontents) GetMimetype() string {
	if x != nil {
		return x.Mimetype
	}
	return ""
}

func (x *Resourcecontents) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// Text provided to or from an LLM.
type Textcontent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional annotations for the client.
	Annotations *Annotations `protobuf:"bytes,1,opt,name=Annotations,proto3" json:"Annotations,omitempty"`
	// The text content of the message.
	Text          string `protobuf:"bytes,2,opt,name=Text,proto3" json:"Text,omitempty"`
	Type          string `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Textcontent) Reset() {
	*x = Textcontent{}
	mi := &file_schema_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Textcontent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Textcontent) ProtoMessage() {}

func (x *Textcontent) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Textcontent.ProtoReflect.Descriptor instead.
func (*Textcontent) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{42}
}

func (x *Textcontent) GetAnnotations() *Annotations {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Textcontent) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Textcontent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// An optional notification from the server to the client, informing it that the list of tools it offers has changed. This may be issued by servers without any previous subscription from the client.
type Toollistchangednotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Params        *anypb.Any             `protobuf:"bytes,1,opt,name=Params,proto3" json:"Params,omitempty"`
	Method        string                 `protobuf:"bytes,2,opt,name=Method,proto3" json:"Method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Toollistchangednotification) Reset() {
	*x = Toollistchangednotification{}
	mi := &file_schema_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Toollistchangednotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Toollistchangednotification) ProtoMessage() {}

func (x *Toollistchangednotification) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Toollistchangednotification.ProtoReflect.Descriptor instead.
func (*Toollistchangednotification) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{43}
}

func (x *Toollistchangednotification) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Toollistchangednotification) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

// Optional annotations for the client. The client can use annotations to inform how objects are used or displayed
type Annotations struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Describes who the intended customer of this object or data is. It can include multiple entries to indicate content useful for multiple audiences (e.g., `["user", "assistant"]`).
	Audience []Role `protobuf:"varint,1,rep,packed,name=Audience,proto3,enum=mcp.Role" json:"Audience,omitempty"`
	// Describes how important this data is for operating the server. A value of 1 means "most important," and indicates that the data is effectively required, while 0 means "least important," and indicates that the data is entirely optional.
	Priority      float64 `protobuf:"fixed64,2,opt,name=Priority,proto3" json:"Priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Annotations) Reset() {
	*x = Annotations{}
	mi := &file_schema_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Annotations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Annotations) ProtoMessage() {}

func (x *Annotations) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Annotations.ProtoReflect.Descriptor instead.
func (*Annotations) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{44}
}

func (x *Annotations) GetAudience() []Role {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *Annotations) GetPriority() float64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

// A request from the server to sample an LLM via the client. The client has full discretion over which model to select. The client should also inform the user before beginning sampling, to allow them to inspect the request (human in the loop) and decide whether to approve it.
type Createmessagerequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Createmessagerequest) Reset() {
	*x = Createmessagerequest{}
	mi := &file_schema_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Createmessagerequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Createmessagerequest) ProtoMessage() {}

func (x *Createmessagerequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Createmessagerequest.ProtoReflect.Descriptor instead.
func (*Createmessagerequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{45}
}

func (x *Createmessagerequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Createmessagerequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// After receiving an initialize request from the client, the server sends this response.
type Initializeresult struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Serverinfo *Implementation        `protobuf:"bytes,1,opt,name=Serverinfo,proto3" json:"Serverinfo,omitempty"`
	// This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.
	Meta         *anypb.Any          `protobuf:"bytes,2,opt,name=Meta,proto3" json:"Meta,omitempty"`
	Capabilities *Servercapabilities `protobuf:"bytes,3,opt,name=Capabilities,proto3" json:"Capabilities,omitempty"`
	// Instructions describing how to use the server and its features. This can be used by clients to improve the LLM's understanding of available tools, resources, etc. It can be thought of like a "hint" to the model. For example, this information MAY be added to the system prompt.
	Instructions string `protobuf:"bytes,4,opt,name=Instructions,proto3" json:"Instructions,omitempty"`
	// The version of the Model Context Protocol that the server wants to use. This may not match the version that the client requested. If the client cannot support this version, it MUST disconnect.
	Protocolversion string `protobuf:"bytes,5,opt,name=Protocolversion,proto3" json:"Protocolversion,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Initializeresult) Reset() {
	*x = Initializeresult{}
	mi := &file_schema_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Initializeresult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Initializeresult) ProtoMessage() {}

func (x *Initializeresult) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Initializeresult.ProtoReflect.Descriptor instead.
func (*Initializeresult) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{46}
}

func (x *Initializeresult) GetServerinfo() *Implementation {
	if x != nil {
		return x.Serverinfo
	}
	return nil
}

func (x *Initializeresult) GetMeta() *anypb.Any {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Initializeresult) GetCapabilities() *Servercapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *Initializeresult) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

func (x *Initializeresult) GetProtocolversion() string {
	if x != nil {
		return x.Protocolversion
	}
	return ""
}

// The server's response to a resources/templates/list request from the client.
type Listresourcetemplatesresult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.
	Meta *anypb.Any `protobuf:"bytes,1,opt,name=Meta,proto3" json:"Meta,omitempty"`
	// An opaque token representing the pagination position after the last returned result. If present, there may be more results available.
	Nextcursor        string              `protobuf:"bytes,2,opt,name=Nextcursor,proto3" json:"Nextcursor,omitempty"`
	Resourcetemplates []*Resourcetemplate `protobuf:"bytes,3,rep,name=Resourcetemplates,proto3" json:"Resourcetemplates,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Listresourcetemplatesresult) Reset() {
	*x = Listresourcetemplatesresult{}
	mi := &file_schema_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Listresourcetemplatesresult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listresourcetemplatesresult) ProtoMessage() {}

func (x *Listresourcetemplatesresult) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listresourcetemplatesresult.ProtoReflect.Descriptor instead.
func (*Listresourcetemplatesresult) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{47}
}

func (x *Listresourcetemplatesresult) GetMeta() *anypb.Any {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Listresourcetemplatesresult) GetNextcursor() string {
	if x != nil {
		return x.Nextcursor
	}
	return ""
}

func (x *Listresourcetemplatesresult) GetResourcetemplates() []*Resourcetemplate {
	if x != nil {
		return x.Resourcetemplates
	}
	return nil
}

// A reference to a resource or resource template definition.
type Resourcereference struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  string                 `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	// The URI or URI template of the resource.
	Uri           string `protobuf:"bytes,2,opt,name=Uri,proto3" json:"Uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resourcereference) Reset() {
	*x = Resourcereference{}
	mi := &file_schema_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resourcereference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resourcereference) ProtoMessage() {}

func (x *Resourcereference) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resourcereference.ProtoReflect.Descriptor instead.
func (*Resourcereference) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{48}
}

func (x *Resourcereference) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Resourcereference) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// Used by the client to invoke a tool provided by the server.
type Calltoolrequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Calltoolrequest) Reset() {
	*x = Calltoolrequest{}
	mi := &file_schema_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Calltoolrequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Calltoolrequest) ProtoMessage() {}

func (x *Calltoolrequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Calltoolrequest.ProtoReflect.Descriptor instead.
func (*Calltoolrequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{49}
}

func (x *Calltoolrequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Calltoolrequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// The server's response to a completion/complete request
type Completeresult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.
	Meta          *anypb.Any `protobuf:"bytes,1,opt,name=Meta,proto3" json:"Meta,omitempty"`
	Completion    *anypb.Any `protobuf:"bytes,2,opt,name=Completion,proto3" json:"Completion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Completeresult) Reset() {
	*x = Completeresult{}
	mi := &file_schema_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Completeresult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Completeresult) ProtoMessage() {}

func (x *Completeresult) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Completeresult.ProtoReflect.Descriptor instead.
func (*Completeresult) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{50}
}

func (x *Completeresult) GetMeta() *anypb.Any {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Completeresult) GetCompletion() *anypb.Any {
	if x != nil {
		return x.Completion
	}
	return nil
}

// The client's response to a sampling/create_message request from the server. The client should inform the user before returning the sampled message, to allow them to inspect the response (human in the loop) and decide whether to allow the server to see it.
type Createmessageresult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.
	Meta    *anypb.Any `protobuf:"bytes,1,opt,name=Meta,proto3" json:"Meta,omitempty"`
	Content *anypb.Any `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	// The name of the model that generated the message.
	Model string `protobuf:"bytes,3,opt,name=Model,proto3" json:"Model,omitempty"`
	Role  Role   `protobuf:"varint,4,opt,name=Role,proto3,enum=mcp.Role" json:"Role,omitempty"`
	// The reason why sampling stopped, if known.
	Stopreason    string `protobuf:"bytes,5,opt,name=Stopreason,proto3" json:"Stopreason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Createmessageresult) Reset() {
	*x = Createmessageresult{}
	mi := &file_schema_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Createmessageresult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Createmessageresult) ProtoMessage() {}

func (x *Createmessageresult) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Createmessageresult.ProtoReflect.Descriptor instead.
func (*Createmessageresult) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{51}
}

func (x *Createmessageresult) GetMeta() *anypb.Any {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Createmessageresult) GetContent() *anypb.Any {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Createmessageresult) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Createmessageresult) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_ASSISTANT
}

func (x *Createmessageresult) GetStopreason() string {
	if x != nil {
		return x.Stopreason
	}
	return ""
}

// An out-of-band notification used to inform the receiver of a progress update for a long-running request.
type Progressnotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Progressnotification) Reset() {
	*x = Progressnotification{}
	mi := &file_schema_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Progressnotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Progressnotification) ProtoMessage() {}

func (x *Progressnotification) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Progressnotification.ProtoReflect.Descriptor instead.
func (*Progressnotification) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{52}
}

func (x *Progressnotification) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Progressnotification) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// Additional properties describing a Tool to clients. NOTE: all properties in ToolAnnotations are **hints**. They are not guaranteed to provide a faithful description of tool behavior (including descriptive properties like `title`). Clients should never make tool use decisions based on ToolAnnotations received from untrusted servers.
type Toolannotations struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, the tool may perform destructive updates to its environment. If false, the tool performs only additive updates. (This property is meaningful only when `readOnlyHint == false`) Default: true
	Destructivehint bool `protobuf:"varint,1,opt,name=Destructivehint,proto3" json:"Destructivehint,omitempty"`
	// If true, calling the tool repeatedly with the same arguments will have no additional effect on the its environment. (This property is meaningful only when `readOnlyHint == false`) Default: false
	Idempotenthint bool `protobuf:"varint,2,opt,name=Idempotenthint,proto3" json:"Idempotenthint,omitempty"`
	// If true, this tool may interact with an "open world" of external entities. If false, the tool's domain of interaction is closed. For example, the world of a web search tool is open, whereas that of a memory tool is not. Default: true
	Openworldhint bool `protobuf:"varint,3,opt,name=Openworldhint,proto3" json:"Openworldhint,omitempty"`
	// If true, the tool does not modify its environment. Default: false
	Readonlyhint bool `protobuf:"varint,4,opt,name=Readonlyhint,proto3" json:"Readonlyhint,omitempty"`
	// A human-readable title for the tool.
	Title         string `protobuf:"bytes,5,opt,name=Title,proto3" json:"Title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Toolannotations) Reset() {
	*x = Toolannotations{}
	mi := &file_schema_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Toolannotations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Toolannotations) ProtoMessage() {}

func (x *Toolannotations) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Toolannotations.ProtoReflect.Descriptor instead.
func (*Toolannotations) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{53}
}

func (x *Toolannotations) GetDestructivehint() bool {
	if x != nil {
		return x.Destructivehint
	}
	return false
}

func (x *Toolannotations) GetIdempotenthint() bool {
	if x != nil {
		return x.Idempotenthint
	}
	return false
}

func (x *Toolannotations) GetOpenworldhint() bool {
	if x != nil {
		return x.Openworldhint
	}
	return false
}

func (x *Toolannotations) GetReadonlyhint() bool {
	if x != nil {
		return x.Readonlyhint
	}
	return false
}

func (x *Toolannotations) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Blobresourcecontents struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A base64-encoded string representing the binary data of the item.
	Blob string `protobuf:"bytes,1,opt,name=Blob,proto3" json:"Blob,omitempty"`
	// The MIME type of this resource, if known.
	Mimetype string `protobuf:"bytes,2,opt,name=Mimetype,proto3" json:"Mimetype,omitempty"`
	// The URI of this resource.
	Uri           string `protobuf:"bytes,3,opt,name=Uri,proto3" json:"Uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Blobresourcecontents) Reset() {
	*x = Blobresourcecontents{}
	mi := &file_schema_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Blobresourcecontents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blobresourcecontents) ProtoMessage() {}

func (x *Blobresourcecontents) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blobresourcecontents.ProtoReflect.Descriptor instead.
func (*Blobresourcecontents) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{54}
}

func (x *Blobresourcecontents) GetBlob() string {
	if x != nil {
		return x.Blob
	}
	return ""
}

func (x *Blobresourcecontents) GetMimetype() string {
	if x != nil {
		return x.Mimetype
	}
	return ""
}

func (x *Blobresourcecontents) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// The server's preferences for model selection, requested of the client during sampling. Because LLMs can vary along multiple dimensions, choosing the "best" model is rarely straightforward. Different models excel in different areas some are faster but less capable, others are more capable but more expensive, and so on. This interface allows servers to express their priorities across multiple dimensions to help clients make an appropriate selection for their use case. These preferences are always advisory. The client MAY ignore them. It is also up to the client to decide how to interpret these preferences and how to balance them against other considerations.
type Modelpreferences struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// How much to prioritize cost when selecting a model. A value of 0 means cost is not important, while a value of 1 means cost is the most important factor.
	Costpriority float64 `protobuf:"fixed64,1,opt,name=Costpriority,proto3" json:"Costpriority,omitempty"`
	// Optional hints to use for model selection. If multiple hints are specified, the client MUST evaluate them in order (such that the first match is taken). The client SHOULD prioritize these hints over the numeric priorities, but MAY still use the priorities to select from ambiguous matches.
	Hints []*Modelhint `protobuf:"bytes,2,rep,name=Hints,proto3" json:"Hints,omitempty"`
	// How much to prioritize intelligence and capabilities when selecting a model. A value of 0 means intelligence is not important, while a value of 1 means intelligence is the most important factor.
	Intelligencepriority float64 `protobuf:"fixed64,3,opt,name=Intelligencepriority,proto3" json:"Intelligencepriority,omitempty"`
	// How much to prioritize sampling speed (latency) when selecting a model. A value of 0 means speed is not important, while a value of 1 means speed is the most important factor.
	Speedpriority float64 `protobuf:"fixed64,4,opt,name=Speedpriority,proto3" json:"Speedpriority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Modelpreferences) Reset() {
	*x = Modelpreferences{}
	mi := &file_schema_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Modelpreferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Modelpreferences) ProtoMessage() {}

func (x *Modelpreferences) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Modelpreferences.ProtoReflect.Descriptor instead.
func (*Modelpreferences) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{55}
}

func (x *Modelpreferences) GetCostpriority() float64 {
	if x != nil {
		return x.Costpriority
	}
	return 0
}

func (x *Modelpreferences) GetHints() []*Modelhint {
	if x != nil {
		return x.Hints
	}
	return nil
}

func (x *Modelpreferences) GetIntelligencepriority() float64 {
	if x != nil {
		return x.Intelligencepriority
	}
	return 0
}

func (x *Modelpreferences) GetSpeedpriority() float64 {
	if x != nil {
		return x.Speedpriority
	}
	return 0
}

// The server's response to a resources/read request from the client.
type Readresourceresult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.
	Meta          *anypb.Any   `protobuf:"bytes,1,opt,name=Meta,proto3" json:"Meta,omitempty"`
	Contents      []*anypb.Any `protobuf:"bytes,2,rep,name=Contents,proto3" json:"Contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Readresourceresult) Reset() {
	*x = Readresourceresult{}
	mi := &file_schema_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Readresourceresult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Readresourceresult) ProtoMessage() {}

func (x *Readresourceresult) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Readresourceresult.ProtoReflect.Descriptor instead.
func (*Readresourceresult) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{56}
}

func (x *Readresourceresult) GetMeta() *anypb.Any {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Readresourceresult) GetContents() []*anypb.Any {
	if x != nil {
		return x.Contents
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_schema_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{57}
}

func (x *Request) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Request) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// Describes a message issued to or received from an LLM API.
type Samplingmessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       *anypb.Any             `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	Role          Role                   `protobuf:"varint,2,opt,name=Role,proto3,enum=mcp.Role" json:"Role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Samplingmessage) Reset() {
	*x = Samplingmessage{}
	mi := &file_schema_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Samplingmessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Samplingmessage) ProtoMessage() {}

func (x *Samplingmessage) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Samplingmessage.ProtoReflect.Descriptor instead.
func (*Samplingmessage) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{58}
}

func (x *Samplingmessage) GetContent() *anypb.Any {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Samplingmessage) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_ASSISTANT
}

// Capabilities that a server may support. Known capabilities are defined here, in this schema, but this is not a closed set: any server can define its own, additional capabilities.
type Servercapabilities struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Present if the server offers any resources to read.
	Resources *anypb.Any `protobuf:"bytes,1,opt,name=Resources,proto3" json:"Resources,omitempty"`
	// Present if the server offers any tools to call.
	Tools *anypb.Any `protobuf:"bytes,2,opt,name=Tools,proto3" json:"Tools,omitempty"`
	// Present if the server supports argument autocompletion suggestions.
	Completions *anypb.Any `protobuf:"bytes,3,opt,name=Completions,proto3" json:"Completions,omitempty"`
	// Experimental, non-standard capabilities that the server supports.
	Experimental *anypb.Any `protobuf:"bytes,4,opt,name=Experimental,proto3" json:"Experimental,omitempty"`
	// Present if the server supports sending log messages to the client.
	Logging *anypb.Any `protobuf:"bytes,5,opt,name=Logging,proto3" json:"Logging,omitempty"`
	// Present if the server offers any prompt templates.
	Prompts       *anypb.Any `protobuf:"bytes,6,opt,name=Prompts,proto3" json:"Prompts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Servercapabilities) Reset() {
	*x = Servercapabilities{}
	mi := &file_schema_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Servercapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Servercapabilities) ProtoMessage() {}

func (x *Servercapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Servercapabilities.ProtoReflect.Descriptor instead.
func (*Servercapabilities) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{59}
}

func (x *Servercapabilities) GetResources() *anypb.Any {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Servercapabilities) GetTools() *anypb.Any {
	if x != nil {
		return x.Tools
	}
	return nil
}

func (x *Servercapabilities) GetCompletions() *anypb.Any {
	if x != nil {
		return x.Completions
	}
	return nil
}

func (x *Servercapabilities) GetExperimental() *anypb.Any {
	if x != nil {
		return x.Experimental
	}
	return nil
}

func (x *Servercapabilities) GetLogging() *anypb.Any {
	if x != nil {
		return x.Logging
	}
	return nil
}

func (x *Servercapabilities) GetPrompts() *anypb.Any {
	if x != nil {
		return x.Prompts
	}
	return nil
}

// A request from the client to the server, to ask for completion options.
type Completerequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Completerequest) Reset() {
	*x = Completerequest{}
	mi := &file_schema_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Completerequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Completerequest) ProtoMessage() {}

func (x *Completerequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Completerequest.ProtoReflect.Descriptor instead.
func (*Completerequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{60}
}

func (x *Completerequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Completerequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// Used by the client to get a prompt provided by the server.
type Getpromptrequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Getpromptrequest) Reset() {
	*x = Getpromptrequest{}
	mi := &file_schema_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Getpromptrequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Getpromptrequest) ProtoMessage() {}

func (x *Getpromptrequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Getpromptrequest.ProtoReflect.Descriptor instead.
func (*Getpromptrequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{61}
}

func (x *Getpromptrequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Getpromptrequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// A notification which does not expect a response.
type Jsonrpcnotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Params        *anypb.Any             `protobuf:"bytes,1,opt,name=Params,proto3" json:"Params,omitempty"`
	Jsonrpc       string                 `protobuf:"bytes,2,opt,name=Jsonrpc,proto3" json:"Jsonrpc,omitempty"`
	Method        string                 `protobuf:"bytes,3,opt,name=Method,proto3" json:"Method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Jsonrpcnotification) Reset() {
	*x = Jsonrpcnotification{}
	mi := &file_schema_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jsonrpcnotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jsonrpcnotification) ProtoMessage() {}

func (x *Jsonrpcnotification) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jsonrpcnotification.ProtoReflect.Descriptor instead.
func (*Jsonrpcnotification) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{62}
}

func (x *Jsonrpcnotification) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Jsonrpcnotification) GetJsonrpc() string {
	if x != nil {
		return x.Jsonrpc
	}
	return ""
}

func (x *Jsonrpcnotification) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

// Sent from the client to the server, to read a specific resource URI.
type Readresourcerequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Readresourcerequest) Reset() {
	*x = Readresourcerequest{}
	mi := &file_schema_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Readresourcerequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Readresourcerequest) ProtoMessage() {}

func (x *Readresourcerequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Readresourcerequest.ProtoReflect.Descriptor instead.
func (*Readresourcerequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{63}
}

func (x *Readresourcerequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Readresourcerequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// A request from the client to the server, to enable or adjust logging.
type Setlevelrequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Setlevelrequest) Reset() {
	*x = Setlevelrequest{}
	mi := &file_schema_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Setlevelrequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Setlevelrequest) ProtoMessage() {}

func (x *Setlevelrequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Setlevelrequest.ProtoReflect.Descriptor instead.
func (*Setlevelrequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{64}
}

func (x *Setlevelrequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Setlevelrequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// An optional notification from the server to the client, informing it that the list of prompts it offers has changed. This may be issued by servers without any previous subscription from the client.
type Promptlistchangednotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Promptlistchangednotification) Reset() {
	*x = Promptlistchangednotification{}
	mi := &file_schema_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Promptlistchangednotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Promptlistchangednotification) ProtoMessage() {}

func (x *Promptlistchangednotification) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Promptlistchangednotification.ProtoReflect.Descriptor instead.
func (*Promptlistchangednotification) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{65}
}

func (x *Promptlistchangednotification) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Promptlistchangednotification) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// Sent from the client to request a list of tools the server has.
type Listtoolsrequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Params        *anypb.Any             `protobuf:"bytes,2,opt,name=Params,proto3" json:"Params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Listtoolsrequest) Reset() {
	*x = Listtoolsrequest{}
	mi := &file_schema_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Listtoolsrequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listtoolsrequest) ProtoMessage() {}

func (x *Listtoolsrequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listtoolsrequest.ProtoReflect.Descriptor instead.
func (*Listtoolsrequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{66}
}

func (x *Listtoolsrequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Listtoolsrequest) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

// The server's response to a tools/list request from the client.
type Listtoolsresult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This result property is reserved by the protocol to allow clients and servers to attach additional metadata to their responses.
	Meta *anypb.Any `protobuf:"bytes,1,opt,name=Meta,proto3" json:"Meta,omitempty"`
	// An opaque token representing the pagination position after the last returned result. If present, there may be more results available.
	Nextcursor    string  `protobuf:"bytes,2,opt,name=Nextcursor,proto3" json:"Nextcursor,omitempty"`
	Tools         []*Tool `protobuf:"bytes,3,rep,name=Tools,proto3" json:"Tools,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Listtoolsresult) Reset() {
	*x = Listtoolsresult{}
	mi := &file_schema_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Listtoolsresult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listtoolsresult) ProtoMessage() {}

func (x *Listtoolsresult) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listtoolsresult.ProtoReflect.Descriptor instead.
func (*Listtoolsresult) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{67}
}

func (x *Listtoolsresult) GetMeta() *anypb.Any {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Listtoolsresult) GetNextcursor() string {
	if x != nil {
		return x.Nextcursor
	}
	return ""
}

func (x *Listtoolsresult) GetTools() []*Tool {
	if x != nil {
		return x.Tools
	}
	return nil
}

var File_schema_proto protoreflect.FileDescriptor

const file_schema_proto_rawDesc = "" +
	"\n" +
	"\fschema.proto\x12\x03mcp\x1a\x19google/protobuf/any.proto\"c\n" +
	"\x1bResourceupdatednotification\x12,\n" +
	"\x06Params\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x06Params\x12\x16\n" +
	"\x06Method\x18\x02 \x01(\tR\x06Method\"\x86\x01\n" +
	"\fAudiocontent\x12\x1a\n" +
	"\bMimetype\x18\x01 \x01(\tR\bMimetype\x12\x12\n" +
	"\x04Type\x18\x02 \x01(\tR\x04Type\x122\n" +
	"\vAnnotations\x18\x03 \x01(\v2\x10.mcp.AnnotationsR\vAnnotations\x12\x12\n" +
	"\x04Data\x18\x04 \x01(\tR\x04Data\"]\n" +
	"\x15Cancellednotification\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"\\\n" +
	"\x14Listresourcesrequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"2\n" +
	"\x06Result\x12(\n" +
	"\x04Meta\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x04Meta\"X\n" +
	"\x10Subscriberequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"\x8c\x01\n" +
	"\x10Embeddedresource\x12\x12\n" +
	"\x04Type\x18\x01 \x01(\tR\x04Type\x122\n" +
	"\vAnnotations\x18\x02 \x01(\v2\x10.mcp.AnnotationsR\vAnnotations\x120\n" +
	"\bResource\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\bResource\"_\n" +
	"\x17Initializednotification\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"`\n" +
	"\x0fJsonrpcresponse\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\tR\x02Id\x12\x18\n" +
	"\aJsonrpc\x18\x02 \x01(\tR\aJsonrpc\x12#\n" +
	"\x06Result\x18\x03 \x01(\v2\v.mcp.ResultR\x06Result\"g\n" +
	"\x1fResourcelistchangednotification\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"\xba\x01\n" +
	"\x10Resourcetemplate\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12 \n" +
	"\vUritemplate\x18\x02 \x01(\tR\vUritemplate\x122\n" +
	"\vAnnotations\x18\x03 \x01(\v2\x10.mcp.AnnotationsR\vAnnotations\x12 \n" +
	"\vDescription\x18\x04 \x01(\tR\vDescription\x12\x1a\n" +
	"\bMimetype\x18\x05 \x01(\tR\bMimetype\"\x86\x01\n" +
	"\fImagecontent\x12\x12\n" +
	"\x04Type\x18\x01 \x01(\tR\x04Type\x122\n" +
	"\vAnnotations\x18\x02 \x01(\v2\x10.mcp.AnnotationsR\vAnnotations\x12\x12\n" +
	"\x04Data\x18\x03 \x01(\tR\x04Data\x12\x1a\n" +
	"\bMimetype\x18\x04 \x01(\tR\bMimetype\"d\n" +
	"\x1cListresourcetemplatesrequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"b\n" +
	"\x0ePromptargument\x12 \n" +
	"\vDescription\x18\x01 \x01(\tR\vDescription\x12\x12\n" +
	"\x04Name\x18\x02 \x01(\tR\x04Name\x12\x1a\n" +
	"\bRequired\x18\x03 \x01(\bR\bRequired\"\xac\x01\n" +
	"\x04Tool\x12 \n" +
	"\vDescription\x18\x01 \x01(\tR\vDescription\x126\n" +
	"\vInputschema\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\vInputschema\x12\x12\n" +
	"\x04Name\x18\x03 \x01(\tR\x04Name\x126\n" +
	"\vAnnotations\x18\x04 \x01(\v2\x14.mcp.ToolannotationsR\vAnnotations\"\x84\x01\n" +
	"\x0eCalltoolresult\x12(\n" +
	"\x04Meta\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x04Meta\x12.\n" +
	"\aContent\x18\x02 \x03(\v2\x14.google.protobuf.AnyR\aContent\x12\x18\n" +
	"\aIserror\x18\x03 \x01(\bR\aIserror\">\n" +
	"\x0eImplementation\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12\x18\n" +
	"\aVersion\x18\x02 \x01(\tR\aVersion\"Y\n" +
	"\x11Initializerequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"Z\n" +
	"\x12Unsubscriberequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"\x8d\x01\n" +
	"\x0fGetpromptresult\x12(\n" +
	"\x04Meta\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x04Meta\x12 \n" +
	"\vDescription\x18\x02 \x01(\tR\vDescription\x12.\n" +
	"\bMessages\x18\x03 \x03(\v2\x12.mcp.PromptmessageR\bMessages\"9\n" +
	"\x0fPromptreference\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12\x12\n" +
	"\x04Type\x18\x02 \x01(\tR\x04Type\"\xb6\x01\n" +
	"\bResource\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12\x12\n" +
	"\x04Size\x18\x02 \x01(\x03R\x04Size\x12\x10\n" +
	"\x03Uri\x18\x03 \x01(\tR\x03Uri\x122\n" +
	"\vAnnotations\x18\x04 \x01(\v2\x10.mcp.AnnotationsR\vAnnotations\x12 \n" +
	"\vDescription\x18\x05 \x01(\tR\vDescription\x12\x1a\n" +
	"\bMimetype\x18\x06 \x01(\tR\bMimetype\",\n" +
	"\x04Root\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12\x10\n" +
	"\x03Uri\x18\x02 \x01(\tR\x03Uri\"d\n" +
	"\x1cRootslistchangednotification\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"\xac\x01\n" +
	"\x12Clientcapabilities\x128\n" +
	"\fExperimental\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\fExperimental\x12*\n" +
	"\x05Roots\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x05Roots\x120\n" +
	"\bSampling\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\bSampling\"T\n" +
	"\fNotification\x12,\n" +
	"\x06Params\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x06Params\x12\x16\n" +
	"\x06Method\x18\x02 \x01(\tR\x06Method\"[\n" +
	"\x0fPaginatedresult\x12(\n" +
	"\x04Meta\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x04Meta\x12\x1e\n" +
	"\n" +
	"Nextcursor\x18\x02 \x01(\tR\n" +
	"Nextcursor\"\x80\x01\n" +
	"\x0eJsonrpcrequest\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\tR\x02Id\x12\x18\n" +
	"\aJsonrpc\x18\x02 \x01(\tR\aJsonrpc\x12\x16\n" +
	"\x06Method\x18\x03 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x04 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"\x84\x01\n" +
	"\x11Listpromptsresult\x12(\n" +
	"\x04Meta\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x04Meta\x12\x1e\n" +
	"\n" +
	"Nextcursor\x18\x02 \x01(\tR\n" +
	"Nextcursor\x12%\n" +
	"\aPrompts\x18\x03 \x03(\v2\v.mcp.PromptR\aPrompts\"\x8c\x01\n" +
	"\x13Listresourcesresult\x12(\n" +
	"\x04Meta\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x04Meta\x12\x1e\n" +
	"\n" +
	"Nextcursor\x18\x02 \x01(\tR\n" +
	"Nextcursor\x12+\n" +
	"\tResources\x18\x03 \x03(\v2\r.mcp.ResourceR\tResources\"\x1f\n" +
	"\tModelhint\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\"X\n" +
	"\x10Paginatedrequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"X\n" +
	"\x10Listrootsrequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"q\n" +
	"\x06Prompt\x121\n" +
	"\tArguments\x18\x01 \x03(\v2\x13.mcp.PromptargumentR\tArguments\x12 \n" +
	"\vDescription\x18\x02 \x01(\tR\vDescription\x12\x12\n" +
	"\x04Name\x18\x03 \x01(\tR\x04Name\"^\n" +
	"\rPromptmessage\x12.\n" +
	"\aContent\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\aContent\x12\x1d\n" +
	"\x04Role\x18\x02 \x01(\x0e2\t.mcp.RoleR\x04Role\"\\\n" +
	"\x0fListrootsresult\x12(\n" +
	"\x04Meta\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x04Meta\x12\x1f\n" +
	"\x05Roots\x18\x02 \x03(\v2\t.mcp.RootR\x05Roots\"X\n" +
	"\x14Textresourcecontents\x12\x12\n" +
	"\x04Text\x18\x01 \x01(\tR\x04Text\x12\x10\n" +
	"\x03Uri\x18\x02 \x01(\tR\x03Uri\x12\x1a\n" +
	"\bMimetype\x18\x03 \x01(\tR\bMimetype\"d\n" +
	"\fJsonrpcerror\x12*\n" +
	"\x05Error\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x05Error\x12\x0e\n" +
	"\x02Id\x18\x02 \x01(\tR\x02Id\x12\x18\n" +
	"\aJsonrpc\x18\x03 \x01(\tR\aJsonrpc\"Z\n" +
	"\x12Listpromptsrequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"b\n" +
	"\x1aLoggingmessagenotification\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"S\n" +
	"\vPingrequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"@\n" +
	"\x10Resourcecontents\x12\x1a\n" +
	"\bMimetype\x18\x01 \x01(\tR\bMimetype\x12\x10\n" +
	"\x03Uri\x18\x02 \x01(\tR\x03Uri\"i\n" +
	"\vTextcontent\x122\n" +
	"\vAnnotations\x18\x01 \x01(\v2\x10.mcp.AnnotationsR\vAnnotations\x12\x12\n" +
	"\x04Text\x18\x02 \x01(\tR\x04Text\x12\x12\n" +
	"\x04Type\x18\x03 \x01(\tR\x04Type\"c\n" +
	"\x1bToollistchangednotification\x12,\n" +
	"\x06Params\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x06Params\x12\x16\n" +
	"\x06Method\x18\x02 \x01(\tR\x06Method\"P\n" +
	"\vAnnotations\x12%\n" +
	"\bAudience\x18\x01 \x03(\x0e2\t.mcp.RoleR\bAudience\x12\x1a\n" +
	"\bPriority\x18\x02 \x01(\x01R\bPriority\"\\\n" +
	"\x14Createmessagerequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"\xfc\x01\n" +
	"\x10Initializeresult\x123\n" +
	"\n" +
	"Serverinfo\x18\x01 \x01(\v2\x13.mcp.ImplementationR\n" +
	"Serverinfo\x12(\n" +
	"\x04Meta\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x04Meta\x12;\n" +
	"\fCapabilities\x18\x03 \x01(\v2\x17.mcp.ServercapabilitiesR\fCapabilities\x12\"\n" +
	"\fInstructions\x18\x04 \x01(\tR\fInstructions\x12(\n" +
	"\x0fProtocolversion\x18\x05 \x01(\tR\x0fProtocolversion\"\xac\x01\n" +
	"\x1bListresourcetemplatesresult\x12(\n" +
	"\x04Meta\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x04Meta\x12\x1e\n" +
	"\n" +
	"Nextcursor\x18\x02 \x01(\tR\n" +
	"Nextcursor\x12C\n" +
	"\x11Resourcetemplates\x18\x03 \x03(\v2\x15.mcp.ResourcetemplateR\x11Resourcetemplates\"9\n" +
	"\x11Resourcereference\x12\x12\n" +
	"\x04Type\x18\x01 \x01(\tR\x04Type\x12\x10\n" +
	"\x03Uri\x18\x02 \x01(\tR\x03Uri\"W\n" +
	"\x0fCalltoolrequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"p\n" +
	"\x0eCompleteresult\x12(\n" +
	"\x04Meta\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x04Meta\x124\n" +
	"\n" +
	"Completion\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\n" +
	"Completion\"\xc4\x01\n" +
	"\x13Createmessageresult\x12(\n" +
	"\x04Meta\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x04Meta\x12.\n" +
	"\aContent\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\aContent\x12\x14\n" +
	"\x05Model\x18\x03 \x01(\tR\x05Model\x12\x1d\n" +
	"\x04Role\x18\x04 \x01(\x0e2\t.mcp.RoleR\x04Role\x12\x1e\n" +
	"\n" +
	"Stopreason\x18\x05 \x01(\tR\n" +
	"Stopreason\"\\\n" +
	"\x14Progressnotification\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"\xc3\x01\n" +
	"\x0fToolannotations\x12(\n" +
	"\x0fDestructivehint\x18\x01 \x01(\bR\x0fDestructivehint\x12&\n" +
	"\x0eIdempotenthint\x18\x02 \x01(\bR\x0eIdempotenthint\x12$\n" +
	"\rOpenworldhint\x18\x03 \x01(\bR\rOpenworldhint\x12\"\n" +
	"\fReadonlyhint\x18\x04 \x01(\bR\fReadonlyhint\x12\x14\n" +
	"\x05Title\x18\x05 \x01(\tR\x05Title\"X\n" +
	"\x14Blobresourcecontents\x12\x12\n" +
	"\x04Blob\x18\x01 \x01(\tR\x04Blob\x12\x1a\n" +
	"\bMimetype\x18\x02 \x01(\tR\bMimetype\x12\x10\n" +
	"\x03Uri\x18\x03 \x01(\tR\x03Uri\"\xb6\x01\n" +
	"\x10Modelpreferences\x12\"\n" +
	"\fCostpriority\x18\x01 \x01(\x01R\fCostpriority\x12$\n" +
	"\x05Hints\x18\x02 \x03(\v2\x0e.mcp.ModelhintR\x05Hints\x122\n" +
	"\x14Intelligencepriority\x18\x03 \x01(\x01R\x14Intelligencepriority\x12$\n" +
	"\rSpeedpriority\x18\x04 \x01(\x01R\rSpeedpriority\"p\n" +
	"\x12Readresourceresult\x12(\n" +
	"\x04Meta\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x04Meta\x120\n" +
	"\bContents\x18\x02 \x03(\v2\x14.google.protobuf.AnyR\bContents\"O\n" +
	"\aRequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"`\n" +
	"\x0fSamplingmessage\x12.\n" +
	"\aContent\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\aContent\x12\x1d\n" +
	"\x04Role\x18\x02 \x01(\x0e2\t.mcp.RoleR\x04Role\"\xc6\x02\n" +
	"\x12Servercapabilities\x122\n" +
	"\tResources\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\tResources\x12*\n" +
	"\x05Tools\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x05Tools\x126\n" +
	"\vCompletions\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\vCompletions\x128\n" +
	"\fExperimental\x18\x04 \x01(\v2\x14.google.protobuf.AnyR\fExperimental\x12.\n" +
	"\aLogging\x18\x05 \x01(\v2\x14.google.protobuf.AnyR\aLogging\x12.\n" +
	"\aPrompts\x18\x06 \x01(\v2\x14.google.protobuf.AnyR\aPrompts\"W\n" +
	"\x0fCompleterequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"X\n" +
	"\x10Getpromptrequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"u\n" +
	"\x13Jsonrpcnotification\x12,\n" +
	"\x06Params\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x06Params\x12\x18\n" +
	"\aJsonrpc\x18\x02 \x01(\tR\aJsonrpc\x12\x16\n" +
	"\x06Method\x18\x03 \x01(\tR\x06Method\"[\n" +
	"\x13Readresourcerequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"W\n" +
	"\x0fSetlevelrequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"e\n" +
	"\x1dPromptlistchangednotification\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"X\n" +
	"\x10Listtoolsrequest\x12\x16\n" +
	"\x06Method\x18\x01 \x01(\tR\x06Method\x12,\n" +
	"\x06Params\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06Params\"|\n" +
	"\x0fListtoolsresult\x12(\n" +
	"\x04Meta\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x04Meta\x12\x1e\n" +
	"\n" +
	"Nextcursor\x18\x02 \x01(\tR\n" +
	"Nextcursor\x12\x1f\n" +
	"\x05Tools\x18\x03 \x03(\v2\t.mcp.ToolR\x05Tools*\x1f\n" +
	"\x04Role\x12\r\n" +
	"\tASSISTANT\x10\x00\x12\b\n" +
	"\x04USER\x10\x01*o\n" +
	"\fLogginglevel\x12\t\n" +
	"\x05ALERT\x10\x00\x12\f\n" +
	"\bCRITICAL\x10\x01\x12\t\n" +
	"\x05DEBUG\x10\x02\x12\r\n" +
	"\tEMERGENCY\x10\x03\x12\t\n" +
	"\x05ERROR\x10\x04\x12\b\n" +
	"\x04INFO\x10\x05\x12\n" +
	"\n" +
	"\x06NOTICE\x10\x06\x12\v\n" +
	"\aWARNING\x10\aB!Z\x1fgithub.com/adimarco/bifrost/mcpb\x06proto3"

var (
	file_schema_proto_rawDescOnce sync.Once
	file_schema_proto_rawDescData []byte
)

func file_schema_proto_rawDescGZIP() []byte {
	file_schema_proto_rawDescOnce.Do(func() {
		file_schema_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_schema_proto_rawDesc), len(file_schema_proto_rawDesc)))
	})
	return file_schema_proto_rawDescData
}

var file_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 68)
var file_schema_proto_goTypes = []any{
	(Role)(0),                               // 0: mcp.Role
	(Logginglevel)(0),                       // 1: mcp.Logginglevel
	(*Resourceupdatednotification)(nil),     // 2: mcp.Resourceupdatednotification
	(*Audiocontent)(nil),                    // 3: mcp.Audiocontent
	(*Cancellednotification)(nil),           // 4: mcp.Cancellednotification
	(*Listresourcesrequest)(nil),            // 5: mcp.Listresourcesrequest
	(*Result)(nil),                          // 6: mcp.Result
	(*Subscriberequest)(nil),                // 7: mcp.Subscriberequest
	(*Embeddedresource)(nil),                // 8: mcp.Embeddedresource
	(*Initializednotification)(nil),         // 9: mcp.Initializednotification
	(*Jsonrpcresponse)(nil),                 // 10: mcp.Jsonrpcresponse
	(*Resourcelistchangednotification)(nil), // 11: mcp.Resourcelistchangednotification
	(*Resourcetemplate)(nil),                // 12: mcp.Resourcetemplate
	(*Imagecontent)(nil),                    // 13: mcp.Imagecontent
	(*Listresourcetemplatesrequest)(nil),    // 14: mcp.Listresourcetemplatesrequest
	(*Promptargument)(nil),                  // 15: mcp.Promptargument
	(*Tool)(nil),                            // 16: mcp.Tool
	(*Calltoolresult)(nil),                  // 17: mcp.Calltoolresult
	(*Implementation)(nil),                  // 18: mcp.Implementation
	(*Initializerequest)(nil),               // 19: mcp.Initializerequest
	(*Unsubscriberequest)(nil),              // 20: mcp.Unsubscriberequest
	(*Getpromptresult)(nil),                 // 21: mcp.Getpromptresult
	(*Promptreference)(nil),                 // 22: mcp.Promptreference
	(*Resource)(nil),                        // 23: mcp.Resource
	(*Root)(nil),                            // 24: mcp.Root
	(*Rootslistchangednotification)(nil),    // 25: mcp.Rootslistchangednotification
	(*Clientcapabilities)(nil),              // 26: mcp.Clientcapabilities
	(*Notification)(nil),                    // 27: mcp.Notification
	(*Paginatedresult)(nil),                 // 28: mcp.Paginatedresult
	(*Jsonrpcrequest)(nil),                  // 29: mcp.Jsonrpcrequest
	(*Listpromptsresult)(nil),               // 30: mcp.Listpromptsresult
	(*Listresourcesresult)(nil),             // 31: mcp.Listresourcesresult
	(*Modelhint)(nil),                       // 32: mcp.Modelhint
	(*Paginatedrequest)(nil),                // 33: mcp.Paginatedrequest
	(*Listrootsrequest)(nil),                // 34: mcp.Listrootsrequest
	(*Prompt)(nil),                          // 35: mcp.Prompt
	(*Promptmessage)(nil),                   // 36: mcp.Promptmessage
	(*Listrootsresult)(nil),                 // 37: mcp.Listrootsresult
	(*Textresourcecontents)(nil),            // 38: mcp.Textresourcecontents
	(*Jsonrpcerror)(nil),                    // 39: mcp.Jsonrpcerror
	(*Listpromptsrequest)(nil),              // 40: mcp.Listpromptsrequest
	(*Loggingmessagenotification)(nil),      // 41: mcp.Loggingmessagenotification
	(*Pingrequest)(nil),                     // 42: mcp.Pingrequest
	(*Resourcecontents)(nil),                // 43: mcp.Resourcecontents
	(*Textcontent)(nil),                     // 44: mcp.Textcontent
	(*Toollistchangednotification)(nil),     // 45: mcp.Toollistchangednotification
	(*Annotations)(nil),                     // 46: mcp.Annotations
	(*Createmessagerequest)(nil),            // 47: mcp.Createmessagerequest
	(*Initializeresult)(nil),                // 48: mcp.Initializeresult
	(*Listresourcetemplatesresult)(nil),     // 49: mcp.Listresourcetemplatesresult
	(*Resourcereference)(nil),               // 50: mcp.Resourcereference
	(*Calltoolrequest)(nil),                 // 51: mcp.Calltoolrequest
	(*Completeresult)(nil),                  // 52: mcp.Completeresult
	(*Createmessageresult)(nil),             // 53: mcp.Createmessageresult
	(*Progressnotification)(nil),            // 54: mcp.Progressnotification
	(*Toolannotations)(nil),                 // 55: mcp.Toolannotations
	(*Blobresourcecontents)(nil),            // 56: mcp.Blobresourcecontents
	(*Modelpreferences)(nil),                // 57: mcp.Modelpreferences
	(*Readresourceresult)(nil),              // 58: mcp.Readresourceresult
	(*Request)(nil),                         // 59: mcp.Request
	(*Samplingmessage)(nil),                 // 60: mcp.Samplingmessage
	(*Servercapabilities)(nil),              // 61: mcp.Servercapabilities
	(*Completerequest)(nil),                 // 62: mcp.Completerequest
	(*Getpromptrequest)(nil),                // 63: mcp.Getpromptrequest
	(*Jsonrpcnotification)(nil),             // 64: mcp.Jsonrpcnotification
	(*Readresourcerequest)(nil),             // 65: mcp.Readresourcerequest
	(*Setlevelrequest)(nil),                 // 66: mcp.Setlevelrequest
	(*Promptlistchangednotification)(nil),   // 67: mcp.Promptlistchangednotification
	(*Listtoolsrequest)(nil),                // 68: mcp.Listtoolsrequest
	(*Listtoolsresult)(nil),                 // 69: mcp.Listtoolsresult
	(*anypb.Any)(nil),                       // 70: google.protobuf.Any
}
var file_schema_proto_depIdxs = []int32{
	70, // 0: mcp.Resourceupdatednotification.Params:type_name -> google.protobuf.Any
	46, // 1: mcp.Audiocontent.Annotations:type_name -> mcp.Annotations
	70, // 2: mcp.Cancellednotification.Params:type_name -> google.protobuf.Any
	70, // 3: mcp.Listresourcesrequest.Params:type_name -> google.protobuf.Any
	70, // 4: mcp.Result.Meta:type_name -> google.protobuf.Any
	70, // 5: mcp.Subscriberequest.Params:type_name -> google.protobuf.Any
	46, // 6: mcp.Embeddedresource.Annotations:type_name -> mcp.Annotations
	70, // 7: mcp.Embeddedresource.Resource:type_name -> google.protobuf.Any
	70, // 8: mcp.Initializednotification.Params:type_name -> google.protobuf.Any
	6,  // 9: mcp.Jsonrpcresponse.Result:type_name -> mcp.Result
	70, // 10: mcp.Resourcelistchangednotification.Params:type_name -> google.protobuf.Any
	46, // 11: mcp.Resourcetemplate.Annotations:type_name -> mcp.Annotations
	46, // 12: mcp.Imagecontent.Annotations:type_name -> mcp.Annotations
	70, // 13: mcp.Listresourcetemplatesrequest.Params:type_name -> google.protobuf.Any
	70, // 14: mcp.Tool.Inputschema:type_name -> google.protobuf.Any
	55, // 15: mcp.Tool.Annotations:type_name -> mcp.Toolannotations
	70, // 16: mcp.Calltoolresult.Meta:type_name -> google.protobuf.Any
	70, // 17: mcp.Calltoolresult.Content:type_name -> google.protobuf.Any
	70, // 18: mcp.Initializerequest.Params:type_name -> google.protobuf.Any
	70, // 19: mcp.Unsubscriberequest.Params:type_name -> google.protobuf.Any
	70, // 20: mcp.Getpromptresult.Meta:type_name -> google.protobuf.Any
	36, // 21: mcp.Getpromptresult.Messages:type_name -> mcp.Promptmessage
	46, // 22: mcp.Resource.Annotations:type_name -> mcp.Annotations
	70, // 23: mcp.Rootslistchangednotification.Params:type_name -> google.protobuf.Any
	70, // 24: mcp.Clientcapabilities.Experimental:type_name -> google.protobuf.Any
	70, // 25: mcp.Clientcapabilities.Roots:type_name -> google.protobuf.Any
	70, // 26: mcp.Clientcapabilities.Sampling:type_name -> google.protobuf.Any
	70, // 27: mcp.Notification.Params:type_name -> google.protobuf.Any
	70, // 28: mcp.Paginatedresult.Meta:type_name -> google.protobuf.Any
	70, // 29: mcp.Jsonrpcrequest.Params:type_name -> google.protobuf.Any
	70, // 30: mcp.Listpromptsresult.Meta:type_name -> google.protobuf.Any
	35, // 31: mcp.Listpromptsresult.Prompts:type_name -> mcp.Prompt
	70, // 32: mcp.Listresourcesresult.Meta:type_name -> google.protobuf.Any
	23, // 33: mcp.Listresourcesresult.Resources:type_name -> mcp.Resource
	70, // 34: mcp.Paginatedrequest.Params:type_name -> google.protobuf.Any
	70, // 35: mcp.Listrootsrequest.Params:type_name -> google.protobuf.Any
	15, // 36: mcp.Prompt.Arguments:type_name -> mcp.Promptargument
	70, // 37: mcp.Promptmessage.Content:type_name -> google.protobuf.Any
	0,  // 38: mcp.Promptmessage.Role:type_name -> mcp.Role
	70, // 39: mcp.Listrootsresult.Meta:type_name -> google.protobuf.Any
	24, // 40: mcp.Listrootsresult.Roots:type_name -> mcp.Root
	70, // 41: mcp.Jsonrpcerror.Error:type_name -> google.protobuf.Any
	70, // 42: mcp.Listpromptsrequest.Params:type_name -> google.protobuf.Any
	70, // 43: mcp.Loggingmessagenotification.Params:type_name -> google.protobuf.Any
	70, // 44: mcp.Pingrequest.Params:type_name -> google.protobuf.Any
	46, // 45: mcp.Textcontent.Annotations:type_name -> mcp.Annotations
	70, // 46: mcp.Toollistchangednotification.Params:type_name -> google.protobuf.Any
	0,  // 47: mcp.Annotations.Audience:type_name -> mcp.Role
	70, // 48: mcp.Createmessagerequest.Params:type_name -> google.protobuf.Any
	18, // 49: mcp.Initializeresult.Serverinfo:type_name -> mcp.Implementation
	70, // 50: mcp.Initializeresult.Meta:type_name -> google.protobuf.Any
	61, // 51: mcp.Initializeresult.Capabilities:type_name -> mcp.Servercapabilities
	70, // 52: mcp.Listresourcetemplatesresult.Meta:type_name -> google.protobuf.Any
	12, // 53: mcp.Listresourcetemplatesresult.Resourcetemplates:type_name -> mcp.Resourcetemplate
	70, // 54: mcp.Calltoolrequest.Params:type_name -> google.protobuf.Any
	70, // 55: mcp.Completeresult.Meta:type_name -> google.protobuf.Any
	70, // 56: mcp.Completeresult.Completion:type_name -> google.protobuf.Any
	70, // 57: mcp.Createmessageresult.Meta:type_name -> google.protobuf.Any
	70, // 58: mcp.Createmessageresult.Content:type_name -> google.protobuf.Any
	0,  // 59: mcp.Createmessageresult.Role:type_name -> mcp.Role
	70, // 60: mcp.Progressnotification.Params:type_name -> google.protobuf.Any
	32, // 61: mcp.Modelpreferences.Hints:type_name -> mcp.Modelhint
	70, // 62: mcp.Readresourceresult.Meta:type_name -> google.protobuf.Any
	70, // 63: mcp.Readresourceresult.Contents:type_name -> google.protobuf.Any
	70, // 64: mcp.Request.Params:type_name -> google.protobuf.Any
	70, // 65: mcp.Samplingmessage.Content:type_name -> google.protobuf.Any
	0,  // 66: mcp.Samplingmessage.Role:type_name -> mcp.Role
	70, // 67: mcp.Servercapabilities.Resources:type_name -> google.protobuf.Any
	70, // 68: mcp.Servercapabilities.Tools:type_name -> google.protobuf.Any
	70, // 69: mcp.Servercapabilities.Completions:type_name -> google.protobuf.Any
	70, // 70: mcp.Servercapabilities.Experimental:type_name -> google.protobuf.Any
	70, // 71: mcp.Servercapabilities.Logging:type_name -> google.protobuf.Any
	70, // 72: mcp.Servercapabilities.Prompts:type_name -> google.protobuf.Any
	70, // 73: mcp.Completerequest.Params:type_name -> google.protobuf.Any
	70, // 74: mcp.Getpromptrequest.Params:type_name -> google.protobuf.Any
	70, // 75: mcp.Jsonrpcnotification.Params:type_name -> google.protobuf.Any
	70, // 76: mcp.Readresourcerequest.Params:type_name -> google.protobuf.Any
	70, // 77: mcp.Setlevelrequest.Params:type_name -> google.protobuf.Any
	70, // 78: mcp.Promptlistchangednotification.Params:type_name -> google.protobuf.Any
	70, // 79: mcp.Listtoolsrequest.Params:type_name -> google.protobuf.Any
	70, // 80: mcp.Listtoolsresult.Meta:type_name -> google.protobuf.Any
	16, // 81: mcp.Listtoolsresult.Tools:type_name -> mcp.Tool
	82, // [82:82] is the sub-list for method output_type
	82, // [82:82] is the sub-list for method input_type
	82, // [82:82] is the sub-list for extension type_name
	82, // [82:82] is the sub-list for extension extendee
	0,  // [0:82] is the sub-list for field type_name
}

func init() { file_schema_proto_init() }
func file_schema_proto_init() {
	if File_schema_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_schema_proto_rawDesc), len(file_schema_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   68,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_proto_goTypes,
		DependencyIndexes: file_schema_proto_depIdxs,
		EnumInfos:         file_schema_proto_enumTypes,
		MessageInfos:      file_schema_proto_msgTypes,
	}.Build()
	File_schema_proto = out.File
	file_schema_proto_goTypes = nil
	file_schema_proto_depIdxs = nil
}
